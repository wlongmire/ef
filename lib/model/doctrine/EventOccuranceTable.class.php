<?php

/**
 * EventOccuranceTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EventOccuranceTable extends Wf_Doctrine_Table 
{

  /**
   * Returns an instance of this class.
   *
   * @return object EventOccuranceTable
   */
  public static function getInstance() 
  {
    return Doctrine_Core::getTable('EventOccurance');
  }

  // currently using a different version located on EventsTable
//  public function findUpcomingByProfile(Profile $pf)
//  {
//    $eventOccurances = $this->createQuery('eo')
//      ->innerJoin('eo.Event ev')
//      ->innerJoin('ev.EventProfile epf')
//      ->select('eo.*, ev.*')
//      ->addWhere('eo.start_date <= ?', date('Y-m-d', strtotime('+1 month')))
//      ->addWhere('eo.end_date >= ?', date('Y-m-d'))      
//      ->addWhere('epf.profile_id = ?', $pf->id)
//      ->execute();
//    
//    return static::buildDateTimeEventMap($eventOccurances, array(
//       'min_date' => new DateTime(),
//       'max_date' => new DateTime('+1 month'),
//       'column' => 'Event' 
//    ));
//  }
  
  public static function buildDateTimeEventMap($eventOccurances, $options = array())
  {
    $options = array_merge(array(
        'min_date' => null,
        'max_date' => null,
        'column' => 'event_id'
    ), $options);
    
    $map = array();
    foreach ($eventOccurances as $eventOccurance)
    {
      $startDate = $options['min_date'] && $eventOccurance['start_date'] <= $options['min_date']->format('Y-m-d') ? 
                     clone $options['min_date'] :
                     new DateTime($eventOccurance['start_date']);
      $endDate = $options['max_date'] && $eventOccurance['end_date'] > $options['max_date']->format('Y-m-d') ? 
                   clone $options['max_date'] :
                   new DateTime($eventOccurance['end_date']);

      for($startDate; $startDate <= $endDate; $startDate->modify('+1 day'))
      {
        $map[$startDate->format('Y-m-d') . ' ' . $eventOccurance['start_time']][] = $eventOccurance[$options['column']];
      }       
    }
    
    ksort($map);
    
    return $map;
  }

}