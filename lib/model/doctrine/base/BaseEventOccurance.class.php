<?php

/**
 * BaseEventOccurance
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $event_id
 * @property date $start_date
 * @property date $end_date
 * @property time $start_time
 * @property time $end_time
 * @property string $ticket_url
 * @property Event $Event
 * 
 * @method integer        getId()         Returns the current record's "id" value
 * @method integer        getEventId()    Returns the current record's "event_id" value
 * @method date           getStartDate()  Returns the current record's "start_date" value
 * @method date           getEndDate()    Returns the current record's "end_date" value
 * @method time           getStartTime()  Returns the current record's "start_time" value
 * @method time           getEndTime()    Returns the current record's "end_time" value
 * @method string         getTicketUrl()  Returns the current record's "ticket_url" value
 * @method Event          getEvent()      Returns the current record's "Event" value
 * @method EventOccurance setId()         Sets the current record's "id" value
 * @method EventOccurance setEventId()    Sets the current record's "event_id" value
 * @method EventOccurance setStartDate()  Sets the current record's "start_date" value
 * @method EventOccurance setEndDate()    Sets the current record's "end_date" value
 * @method EventOccurance setStartTime()  Sets the current record's "start_time" value
 * @method EventOccurance setEndTime()    Sets the current record's "end_time" value
 * @method EventOccurance setTicketUrl()  Sets the current record's "ticket_url" value
 * @method EventOccurance setEvent()      Sets the current record's "Event" value
 * 
 * @package    eventsfilter
 * @subpackage model
 * @author     Jeremy Kauffman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventOccurance extends wfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_occurance');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('start_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('end_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('start_time', 'time', null, array(
             'type' => 'time',
             ));
        $this->hasColumn('end_time', 'time', null, array(
             'type' => 'time',
             ));
        $this->hasColumn('ticket_url', 'string', 255, array(
             'type' => 'string',
             'url' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id',
             'onDelete' => 'cascade',
             'onUpdate' => 'cascade'));
    }
}