<?php

/**
 * BaseLocation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $Profile
 * @property Doctrine_Collection $Venue
 * @property Doctrine_Collection $Site
 * 
 * @method integer             getId()      Returns the current record's "id" value
 * @method string              getName()    Returns the current record's "name" value
 * @method Doctrine_Collection getProfile() Returns the current record's "Profile" collection
 * @method Doctrine_Collection getVenue()   Returns the current record's "Venue" collection
 * @method Doctrine_Collection getSite()    Returns the current record's "Site" collection
 * @method Location            setId()      Sets the current record's "id" value
 * @method Location            setName()    Sets the current record's "name" value
 * @method Location            setProfile() Sets the current record's "Profile" collection
 * @method Location            setVenue()   Sets the current record's "Venue" collection
 * @method Location            setSite()    Sets the current record's "Site" collection
 * 
 * @package    eventsfilter
 * @subpackage model
 * @author     Jeremy Kauffman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLocation extends wfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('location');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Profile', array(
             'local' => 'id',
             'foreign' => 'location_id'));

        $this->hasMany('Venue', array(
             'local' => 'id',
             'foreign' => 'location_id'));

        $this->hasMany('Site', array(
             'local' => 'id',
             'foreign' => 'location_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $mynestedset0 = new Doctrine_Template_MyNestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($mynestedset0);
    }
}