<?php

/**
 * BaseTagHeading
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $Tag
 * @property Doctrine_Collection $Sites
 * @property Doctrine_Collection $SiteTagHeading
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method Doctrine_Collection getTag()            Returns the current record's "Tag" collection
 * @method Doctrine_Collection getSites()          Returns the current record's "Sites" collection
 * @method Doctrine_Collection getSiteTagHeading() Returns the current record's "SiteTagHeading" collection
 * @method TagHeading          setId()             Sets the current record's "id" value
 * @method TagHeading          setName()           Sets the current record's "name" value
 * @method TagHeading          setTag()            Sets the current record's "Tag" collection
 * @method TagHeading          setSites()          Sets the current record's "Sites" collection
 * @method TagHeading          setSiteTagHeading() Sets the current record's "SiteTagHeading" collection
 * 
 * @package    eventsfilter
 * @subpackage model
 * @author     Jeremy Kauffman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTagHeading extends wfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tag_heading');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 30, array(
             'type' => 'string',
             'regexp' => '/^[a-zA-Z0-9][^|~\\`[\\]{}\\/]*$/',
             'length' => 30,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Tag', array(
             'local' => 'id',
             'foreign' => 'tag_heading_id'));

        $this->hasMany('Site as Sites', array(
             'refClass' => 'SiteTagHeading',
             'local' => 'tag_heading_id',
             'foreign' => 'site_id'));

        $this->hasMany('SiteTagHeading', array(
             'local' => 'id',
             'foreign' => 'tag_heading_id'));
    }
}