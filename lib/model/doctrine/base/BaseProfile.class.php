<?php

/**
 * BaseProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $location_id
 * @property integer $media_item_id
 * @property text $blurb
 * @property boolean $is_group
 * @property string $home_zip_code
 * @property string $studio_zip_code
 * @property boolean $display_email
 * @property aMediaItem $Picture
 * @property Doctrine_Collection $Members
 * @property Location $Location
 * @property Doctrine_Collection $Disciplines
 * @property Doctrine_Collection $Categories
 * @property Doctrine_Collection $Owners
 * @property sfGuardUser $User
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $Urls
 * @property Doctrine_Collection $ProfileGroupMemberships
 * @property Doctrine_Collection $ProfileMemberGroups
 * @property Doctrine_Collection $Events
 * @property Doctrine_Collection $EventProfile
 * @property Doctrine_Collection $ProfileDiscipline
 * @property Doctrine_Collection $ProfileCategory
 * @property Doctrine_Collection $ProfileTagging
 * @property Doctrine_Collection $ProfileOwner
 * 
 * @method string              getName()                    Returns the current record's "name" value
 * @method integer             getLocationId()              Returns the current record's "location_id" value
 * @method integer             getMediaItemId()             Returns the current record's "media_item_id" value
 * @method text                getBlurb()                   Returns the current record's "blurb" value
 * @method boolean             getIsGroup()                 Returns the current record's "is_group" value
 * @method string              getHomeZipCode()             Returns the current record's "home_zip_code" value
 * @method string              getStudioZipCode()           Returns the current record's "studio_zip_code" value
 * @method boolean             getDisplayEmail()            Returns the current record's "display_email" value
 * @method aMediaItem          getPicture()                 Returns the current record's "Picture" value
 * @method Doctrine_Collection getMembers()                 Returns the current record's "Members" collection
 * @method Location            getLocation()                Returns the current record's "Location" value
 * @method Doctrine_Collection getDisciplines()             Returns the current record's "Disciplines" collection
 * @method Doctrine_Collection getCategories()              Returns the current record's "Categories" collection
 * @method Doctrine_Collection getOwners()                  Returns the current record's "Owners" collection
 * @method sfGuardUser         getUser()                    Returns the current record's "User" value
 * @method Doctrine_Collection getGroups()                  Returns the current record's "Groups" collection
 * @method Doctrine_Collection getUrls()                    Returns the current record's "Urls" collection
 * @method Doctrine_Collection getProfileGroupMemberships() Returns the current record's "ProfileGroupMemberships" collection
 * @method Doctrine_Collection getProfileMemberGroups()     Returns the current record's "ProfileMemberGroups" collection
 * @method Doctrine_Collection getEvents()                  Returns the current record's "Events" collection
 * @method Doctrine_Collection getEventProfile()            Returns the current record's "EventProfile" collection
 * @method Doctrine_Collection getProfileDiscipline()       Returns the current record's "ProfileDiscipline" collection
 * @method Doctrine_Collection getProfileCategory()         Returns the current record's "ProfileCategory" collection
 * @method Doctrine_Collection getProfileTagging()          Returns the current record's "ProfileTagging" collection
 * @method Doctrine_Collection getProfileOwner()            Returns the current record's "ProfileOwner" collection
 * @method Profile             setName()                    Sets the current record's "name" value
 * @method Profile             setLocationId()              Sets the current record's "location_id" value
 * @method Profile             setMediaItemId()             Sets the current record's "media_item_id" value
 * @method Profile             setBlurb()                   Sets the current record's "blurb" value
 * @method Profile             setIsGroup()                 Sets the current record's "is_group" value
 * @method Profile             setHomeZipCode()             Sets the current record's "home_zip_code" value
 * @method Profile             setStudioZipCode()           Sets the current record's "studio_zip_code" value
 * @method Profile             setDisplayEmail()            Sets the current record's "display_email" value
 * @method Profile             setPicture()                 Sets the current record's "Picture" value
 * @method Profile             setMembers()                 Sets the current record's "Members" collection
 * @method Profile             setLocation()                Sets the current record's "Location" value
 * @method Profile             setDisciplines()             Sets the current record's "Disciplines" collection
 * @method Profile             setCategories()              Sets the current record's "Categories" collection
 * @method Profile             setOwners()                  Sets the current record's "Owners" collection
 * @method Profile             setUser()                    Sets the current record's "User" value
 * @method Profile             setGroups()                  Sets the current record's "Groups" collection
 * @method Profile             setUrls()                    Sets the current record's "Urls" collection
 * @method Profile             setProfileGroupMemberships() Sets the current record's "ProfileGroupMemberships" collection
 * @method Profile             setProfileMemberGroups()     Sets the current record's "ProfileMemberGroups" collection
 * @method Profile             setEvents()                  Sets the current record's "Events" collection
 * @method Profile             setEventProfile()            Sets the current record's "EventProfile" collection
 * @method Profile             setProfileDiscipline()       Sets the current record's "ProfileDiscipline" collection
 * @method Profile             setProfileCategory()         Sets the current record's "ProfileCategory" collection
 * @method Profile             setProfileTagging()          Sets the current record's "ProfileTagging" collection
 * @method Profile             setProfileOwner()            Sets the current record's "ProfileOwner" collection
 * 
 * @package    eventsfilter
 * @subpackage model
 * @author     Jeremy Kauffman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfile extends wfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('profile');
        $this->hasColumn('name', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 60,
             ));
        $this->hasColumn('location_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('media_item_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('blurb', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('is_group', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('home_zip_code', 'string', 6, array(
             'type' => 'string',
             'regexp' => '/[A-Za-z0-9]{5,6}/',
             'length' => 6,
             ));
        $this->hasColumn('studio_zip_code', 'string', 6, array(
             'type' => 'string',
             'regexp' => '/[A-Za-z0-9]{5,6}/',
             'length' => 6,
             ));
        $this->hasColumn('display_email', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));


        $this->index('name', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('aMediaItem as Picture', array(
             'local' => 'media_item_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('Profile as Members', array(
             'refClass' => 'ProfileGroupMember',
             'local' => 'group_profile_id',
             'foreign' => 'member_profile_id'));

        $this->hasOne('Location', array(
             'local' => 'location_id',
             'foreign' => 'id',
             'onDelete' => 'restrict',
             'onUpdate' => 'cascade'));

        $this->hasMany('Discipline as Disciplines', array(
             'refClass' => 'ProfileDiscipline',
             'local' => 'profile_id',
             'foreign' => 'discipline_id'));

        $this->hasMany('Category as Categories', array(
             'refClass' => 'ProfileCategory',
             'local' => 'profile_id',
             'foreign' => 'category_id'));

        $this->hasMany('sfGuardUser as Owners', array(
             'refClass' => 'ProfileOwner',
             'local' => 'profile_id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $this->hasMany('Profile as Groups', array(
             'refClass' => 'ProfileGroupMember',
             'local' => 'member_profile_id',
             'foreign' => 'group_profile_id'));

        $this->hasMany('ProfileUrl as Urls', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $this->hasMany('ProfileGroupMember as ProfileGroupMemberships', array(
             'local' => 'id',
             'foreign' => 'group_profile_id'));

        $this->hasMany('ProfileGroupMember as ProfileMemberGroups', array(
             'local' => 'id',
             'foreign' => 'member_profile_id'));

        $this->hasMany('Event as Events', array(
             'refClass' => 'EventProfile',
             'local' => 'profile_id',
             'foreign' => 'event_id'));

        $this->hasMany('EventProfile', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $this->hasMany('ProfileDiscipline', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $this->hasMany('ProfileCategory', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $this->hasMany('ProfileTagging', array(
             'local' => 'id',
             'foreign' => 'taggable_id'));

        $this->hasMany('ProfileOwner', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $taggable0 = new Taggable();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($taggable0);
        $this->actAs($timestampable0);
    }
}