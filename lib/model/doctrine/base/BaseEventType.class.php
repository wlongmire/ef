<?php

/**
 * BaseEventType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property boolean $is_daily
 * @property Doctrine_Collection $Event
 * 
 * @method integer             getId()       Returns the current record's "id" value
 * @method string              getName()     Returns the current record's "name" value
 * @method boolean             getIsDaily()  Returns the current record's "is_daily" value
 * @method Doctrine_Collection getEvent()    Returns the current record's "Event" collection
 * @method EventType           setId()       Sets the current record's "id" value
 * @method EventType           setName()     Sets the current record's "name" value
 * @method EventType           setIsDaily()  Sets the current record's "is_daily" value
 * @method EventType           setEvent()    Sets the current record's "Event" collection
 * 
 * @package    eventsfilter
 * @subpackage model
 * @author     Jeremy Kauffman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventType extends wfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_type');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('is_daily', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Event', array(
             'local' => 'id',
             'foreign' => 'event_type_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $mynestedset0 = new Doctrine_Template_MyNestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($mynestedset0);
    }
}