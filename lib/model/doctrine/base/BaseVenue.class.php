<?php

/**
 * BaseVenue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property text $blurb
 * @property integer $location_id
 * @property integer $media_item_id
 * @property string $url
 * @property Location $Location
 * @property aMediaItem $Picture
 * @property Doctrine_Collection $VenueTypes
 * @property Doctrine_Collection $Owners
 * @property Doctrine_Collection $Event
 * @property Doctrine_Collection $VenueVenueType
 * @property Doctrine_Collection $VenueOwner
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method text                getBlurb()          Returns the current record's "blurb" value
 * @method integer             getLocationId()     Returns the current record's "location_id" value
 * @method integer             getMediaItemId()    Returns the current record's "media_item_id" value
 * @method string              getUrl()            Returns the current record's "url" value
 * @method Location            getLocation()       Returns the current record's "Location" value
 * @method aMediaItem          getPicture()        Returns the current record's "Picture" value
 * @method Doctrine_Collection getVenueTypes()     Returns the current record's "VenueTypes" collection
 * @method Doctrine_Collection getOwners()         Returns the current record's "Owners" collection
 * @method Doctrine_Collection getEvent()          Returns the current record's "Event" collection
 * @method Doctrine_Collection getVenueVenueType() Returns the current record's "VenueVenueType" collection
 * @method Doctrine_Collection getVenueOwner()     Returns the current record's "VenueOwner" collection
 * @method Venue               setId()             Sets the current record's "id" value
 * @method Venue               setName()           Sets the current record's "name" value
 * @method Venue               setBlurb()          Sets the current record's "blurb" value
 * @method Venue               setLocationId()     Sets the current record's "location_id" value
 * @method Venue               setMediaItemId()    Sets the current record's "media_item_id" value
 * @method Venue               setUrl()            Sets the current record's "url" value
 * @method Venue               setLocation()       Sets the current record's "Location" value
 * @method Venue               setPicture()        Sets the current record's "Picture" value
 * @method Venue               setVenueTypes()     Sets the current record's "VenueTypes" collection
 * @method Venue               setOwners()         Sets the current record's "Owners" collection
 * @method Venue               setEvent()          Sets the current record's "Event" collection
 * @method Venue               setVenueVenueType() Sets the current record's "VenueVenueType" collection
 * @method Venue               setVenueOwner()     Sets the current record's "VenueOwner" collection
 * 
 * @package    eventsfilter
 * @subpackage model
 * @author     Jeremy Kauffman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVenue extends wfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('venue');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('blurb', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('location_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('media_item_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'url' => true,
             'length' => 255,
             ));


        $this->index('name', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Location', array(
             'local' => 'location_id',
             'foreign' => 'id',
             'onDelete' => 'restrict',
             'onUpdate' => 'cascade'));

        $this->hasOne('aMediaItem as Picture', array(
             'local' => 'media_item_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('VenueType as VenueTypes', array(
             'refClass' => 'VenueVenueType',
             'local' => 'venue_id',
             'foreign' => 'venue_type_id'));

        $this->hasMany('sfGuardUser as Owners', array(
             'refClass' => 'VenueOwner',
             'local' => 'venue_id',
             'foreign' => 'user_id'));

        $this->hasMany('Event', array(
             'local' => 'id',
             'foreign' => 'venue_id'));

        $this->hasMany('VenueVenueType', array(
             'local' => 'id',
             'foreign' => 'venue_id'));

        $this->hasMany('VenueOwner', array(
             'local' => 'id',
             'foreign' => 'venue_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $addressable0 = new Doctrine_Template_Addressable(array(
             'required' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($addressable0);
    }
}