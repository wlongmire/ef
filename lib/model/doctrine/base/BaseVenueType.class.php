<?php

/**
 * BaseVenueType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $Venues
 * @property Doctrine_Collection $VenueVenueType
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method Doctrine_Collection getVenues()         Returns the current record's "Venues" collection
 * @method Doctrine_Collection getVenueVenueType() Returns the current record's "VenueVenueType" collection
 * @method VenueType           setId()             Sets the current record's "id" value
 * @method VenueType           setName()           Sets the current record's "name" value
 * @method VenueType           setVenues()         Sets the current record's "Venues" collection
 * @method VenueType           setVenueVenueType() Sets the current record's "VenueVenueType" collection
 * 
 * @package    eventsfilter
 * @subpackage model
 * @author     Jeremy Kauffman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVenueType extends wfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('venue_type');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'unique' => true,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Venue as Venues', array(
             'refClass' => 'VenueVenueType',
             'local' => 'venue_type_id',
             'foreign' => 'venue_id'));

        $this->hasMany('VenueVenueType', array(
             'local' => 'id',
             'foreign' => 'venue_type_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}