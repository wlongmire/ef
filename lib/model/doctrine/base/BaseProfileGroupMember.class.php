<?php

/**
 * BaseProfileGroupMember
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $group_profile_id
 * @property integer $member_profile_id
 * @property Profile $Group
 * @property Profile $Member
 * 
 * @method integer            getGroupProfileId()    Returns the current record's "group_profile_id" value
 * @method integer            getMemberProfileId()   Returns the current record's "member_profile_id" value
 * @method Profile            getGroup()             Returns the current record's "Group" value
 * @method Profile            getMember()            Returns the current record's "Member" value
 * @method ProfileGroupMember setGroupProfileId()    Sets the current record's "group_profile_id" value
 * @method ProfileGroupMember setMemberProfileId()   Sets the current record's "member_profile_id" value
 * @method ProfileGroupMember setGroup()             Sets the current record's "Group" value
 * @method ProfileGroupMember setMember()            Sets the current record's "Member" value
 * 
 * @package    eventsfilter
 * @subpackage model
 * @author     Jeremy Kauffman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfileGroupMember extends wfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('profile_group_member');
        $this->hasColumn('group_profile_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('member_profile_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profile as Group', array(
             'local' => 'group_profile_id',
             'foreign' => 'id'));

        $this->hasOne('Profile as Member', array(
             'local' => 'member_profile_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}