<?php

/**
 * BaseDiscipline
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $Profiles
 * @property Doctrine_Collection $Events
 * @property Doctrine_Collection $EventDiscipline
 * @property Doctrine_Collection $ProfileDiscipline
 * @property Doctrine_Collection $Sites
 * @property Doctrine_Collection $SiteDiscipline
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getName()              Returns the current record's "name" value
 * @method Doctrine_Collection getProfiles()          Returns the current record's "Profiles" collection
 * @method Doctrine_Collection getEvents()            Returns the current record's "Events" collection
 * @method Doctrine_Collection getEventDiscipline()   Returns the current record's "EventDiscipline" collection
 * @method Doctrine_Collection getProfileDiscipline() Returns the current record's "ProfileDiscipline" collection
 * @method Doctrine_Collection getSites()             Returns the current record's "Sites" collection
 * @method Doctrine_Collection getSiteDiscipline()    Returns the current record's "SiteDiscipline" collection
 * @method Discipline          setId()                Sets the current record's "id" value
 * @method Discipline          setName()              Sets the current record's "name" value
 * @method Discipline          setProfiles()          Sets the current record's "Profiles" collection
 * @method Discipline          setEvents()            Sets the current record's "Events" collection
 * @method Discipline          setEventDiscipline()   Sets the current record's "EventDiscipline" collection
 * @method Discipline          setProfileDiscipline() Sets the current record's "ProfileDiscipline" collection
 * @method Discipline          setSites()             Sets the current record's "Sites" collection
 * @method Discipline          setSiteDiscipline()    Sets the current record's "SiteDiscipline" collection
 * 
 * @package    eventsfilter
 * @subpackage model
 * @author     Jeremy Kauffman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDiscipline extends wfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('discipline');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'regexp' => '/^[a-zA-Z0-9][^|~\\`[\\]{}\\/]*$/',
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Profile as Profiles', array(
             'refClass' => 'ProfileDiscipline',
             'local' => 'discipline_id',
             'foreign' => 'profile_id'));

        $this->hasMany('Event as Events', array(
             'refClass' => 'EventDiscipline',
             'local' => 'discipline_id',
             'foreign' => 'event_id'));

        $this->hasMany('EventDiscipline', array(
             'local' => 'id',
             'foreign' => 'discipline_id'));

        $this->hasMany('ProfileDiscipline', array(
             'local' => 'id',
             'foreign' => 'discipline_id'));

        $this->hasMany('Site as Sites', array(
             'refClass' => 'SiteDiscipline',
             'local' => 'discipline_id',
             'foreign' => 'site_id'));

        $this->hasMany('SiteDiscipline', array(
             'local' => 'id',
             'foreign' => 'discipline_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $mynestedset0 = new Doctrine_Template_MyNestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($mynestedset0);
    }
}