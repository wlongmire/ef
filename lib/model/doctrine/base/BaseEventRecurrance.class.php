<?php

/**
 * BaseEventRecurrance
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $event_id
 * @property date $start_date
 * @property date $end_date
 * @property time $start_time
 * @property time $end_time
 * @property boolean $sunday
 * @property boolean $monday
 * @property boolean $tuesday
 * @property boolean $wednesday
 * @property boolean $thursday
 * @property boolean $friday
 * @property boolean $saturday
 * @property Event $Event
 * 
 * @method integer         getId()         Returns the current record's "id" value
 * @method integer         getEventId()    Returns the current record's "event_id" value
 * @method date            getStartDate()  Returns the current record's "start_date" value
 * @method date            getEndDate()    Returns the current record's "end_date" value
 * @method time            getStartTime()  Returns the current record's "start_time" value
 * @method time            getEndTime()    Returns the current record's "end_time" value
 * @method boolean         getSunday()     Returns the current record's "sunday" value
 * @method boolean         getMonday()     Returns the current record's "monday" value
 * @method boolean         getTuesday()    Returns the current record's "tuesday" value
 * @method boolean         getWednesday()  Returns the current record's "wednesday" value
 * @method boolean         getThursday()   Returns the current record's "thursday" value
 * @method boolean         getFriday()     Returns the current record's "friday" value
 * @method boolean         getSaturday()   Returns the current record's "saturday" value
 * @method Event           getEvent()      Returns the current record's "Event" value
 * @method EventRecurrance setId()         Sets the current record's "id" value
 * @method EventRecurrance setEventId()    Sets the current record's "event_id" value
 * @method EventRecurrance setStartDate()  Sets the current record's "start_date" value
 * @method EventRecurrance setEndDate()    Sets the current record's "end_date" value
 * @method EventRecurrance setStartTime()  Sets the current record's "start_time" value
 * @method EventRecurrance setEndTime()    Sets the current record's "end_time" value
 * @method EventRecurrance setSunday()     Sets the current record's "sunday" value
 * @method EventRecurrance setMonday()     Sets the current record's "monday" value
 * @method EventRecurrance setTuesday()    Sets the current record's "tuesday" value
 * @method EventRecurrance setWednesday()  Sets the current record's "wednesday" value
 * @method EventRecurrance setThursday()   Sets the current record's "thursday" value
 * @method EventRecurrance setFriday()     Sets the current record's "friday" value
 * @method EventRecurrance setSaturday()   Sets the current record's "saturday" value
 * @method EventRecurrance setEvent()      Sets the current record's "Event" value
 * 
 * @package    eventsfilter
 * @subpackage model
 * @author     Jeremy Kauffman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventRecurrance extends wfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_recurrance');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('start_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('end_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('start_time', 'time', null, array(
             'type' => 'time',
             ));
        $this->hasColumn('end_time', 'time', null, array(
             'type' => 'time',
             ));
        $this->hasColumn('sunday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('monday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('tuesday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('wednesday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('thursday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('friday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('saturday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id',
             'onDelete' => 'cascade',
             'onUpdate' => 'cascade'));
    }
}