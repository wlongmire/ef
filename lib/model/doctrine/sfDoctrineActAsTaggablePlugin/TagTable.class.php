<?php

/**
 * TagTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TagTable extends PluginTagTable
{
  /**
   * Returns an instance of this class.
   *
   * @return object TagTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('Tag');
  }
  
  public function findGroupsForModel($model)
  {
    $tags = $this->createQuery('ta')
      ->leftJoin('ta.Tagging tg WITH tg.taggable_model = ?', $model)
      ->innerJoin('ta.TagHeading th')
      ->where('tg.id IS NOT NULL')
      ->groupBy('ta.id')
      ->orderBy('ta.name')
      ->execute();
    
    $grouped = array();
    foreach($tags as $tag)
    {
      $grouped[$tag->TagHeading->name][] = $tag;
    }
    
    return $grouped;
  }
  
  public function findGroupedForHeadingName($tagHeadingName, array $eventIds = array(), array $profileIds = array())
  {
    $query = $this->createQuery('ta')
      ->select('ta.id, ta.name, 0 AS level')
      ->innerJoin('ta.Tagging tg')    
      ->innerJoin('ta.TagHeading th WITH th.name = ?', $tagHeadingName)
      ->groupBy('ta.id')
      ->orderBy('ta.name');
    
    if ($eventIds)
    {
      $query
        ->addWhere('tg.taggable_model = ?', 'Event')
        ->andWhereIn('tg.taggable_id', $eventIds);
    }
    if ($profileIds)
    {
      $query
        ->addWhere('tg.taggable_model = ?', 'Profile')
        ->andWhereIn('tg.taggable_id', $profileIds);
    }    
    
    return $query
      ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
      ->execute();
  }  
  
  public static function findByNames($tagNames)
  {
    return TagTable::getInstance()->createQuery('t')->whereIn('t.name', array_values($tagNames))->execute();
  }
  
  public function findGroupsForEvents()
  {
    return $this->findGroupsForModel('Event');
  }
  
  public function findGroupsForProfiles()
  {
    return $this->findGroupsForModel('Profile');
  }
  
  public function findObjectsForFilter($ids)
  {
    return Doctrine_Query::create()->from('Tag tg')->andWhereIn('tg.id', (array)$ids)->execute();
  }
}